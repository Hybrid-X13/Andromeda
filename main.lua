--[[
    Shoutout to AgentCucco for making the Job Mod: https://steamcommunity.com/sharedfiles/filedetails/?id=2567634705
    All of Andromeda's code was completely restructured and revised to follow Job's structuring. 
    Check out Job if you haven't already, it's one of the best character mods out there.
]]

if not REPENTANCE then return end

print("[Andromeda] Type `andromedahelp` for a list of commands")

ANDROMEDA = RegisterMod("Andromeda", 1)
local mod = ANDROMEDA

require("andromeda_src.andromedaAPI")

--Callbacks
local preRoomEntitySpawn = require("andromeda_src.callbacks.pre_room_entity_spawn")
local postGameStarted = require("andromeda_src.callbacks.post_game_started")
local NPCUpdate = require("andromeda_src.callbacks.npc_update")
local postUpdate = require("andromeda_src.callbacks.post_update")
local postPEffectUpdate = require("andromeda_src.callbacks.post_peffect_update")
local preUseItem = require("andromeda_src.callbacks.pre_use_item")
local useItem = require("andromeda_src.callbacks.use_item")
local useCard = require("andromeda_src.callbacks.use_card")
local usePill = require("andromeda_src.callbacks.use_pill")
local preFamiliarCollision = require("andromeda_src.callbacks.pre_familiar_collision")
local familiarInit = require("andromeda_src.callbacks.familiar_init")
local familiarUpdate = require("andromeda_src.callbacks.familiar_update")
local evaluateCache = require("andromeda_src.callbacks.evaluate_cache")
local postPlayerInit = require("andromeda_src.callbacks.post_player_init")
local preGameExit = require("andromeda_src.callbacks.pre_game_exit")
local entityTakeDmg = require("andromeda_src.callbacks.entity_take_dmg")
local postNewLevel = require("andromeda_src.callbacks.post_new_level")
local postNewRoom = require("andromeda_src.callbacks.post_new_room")
local preSpawnCleanAward = require("andromeda_src.callbacks.pre_spawn_clean_award")
local getTrinket = require("andromeda_src.callbacks.get_trinket")
local postEntityRemove = require("andromeda_src.callbacks.post_entity_remove")
local postEntityKill = require("andromeda_src.callbacks.post_entity_kill")
local postNPCDeath = require("andromeda_src.callbacks.post_npc_death")
local postPlayerUpdate = require("andromeda_src.callbacks.post_player_update")
local postPickupInit = require("andromeda_src.callbacks.post_pickup_init")
local postPickupUpdate = require("andromeda_src.callbacks.post_pickup_update")
local postProjectileUpdate = require("andromeda_src.callbacks.post_projectile_update")
local prePickupCollision = require("andromeda_src.callbacks.pre_pickup_collision")
local prePlayerCollision = require("andromeda_src.callbacks.pre_player_collision")
local postTearInit = require("andromeda_src.callbacks.post_tear_init")
local postFireTear = require("andromeda_src.callbacks.post_fire_tear")
local postTearUpdate = require("andromeda_src.callbacks.post_tear_update")
local preTearCollision = require("andromeda_src.callbacks.pre_tear_collision")
local postLaserInit = require("andromeda_src.callbacks.post_laser_init")
local postLaserUpdate = require("andromeda_src.callbacks.post_laser_update")
local postKnifeUpdate = require("andromeda_src.callbacks.post_knife_update")
local postBombUpdate = require("andromeda_src.callbacks.post_bomb_update")
local postEffectInit = require("andromeda_src.callbacks.post_effect_init")
local postEffectUpdate = require("andromeda_src.callbacks.post_effect_update")
local executeCMD = require("andromeda_src.callbacks.execute_cmd")

mod:AddCallback(ModCallbacks.MC_PRE_ROOM_ENTITY_SPAWN, preRoomEntitySpawn)
mod:AddCallback(ModCallbacks.MC_POST_GAME_STARTED, postGameStarted)
mod:AddCallback(ModCallbacks.MC_NPC_UPDATE, NPCUpdate)
mod:AddCallback(ModCallbacks.MC_POST_UPDATE, postUpdate)
mod:AddCallback(ModCallbacks.MC_POST_PEFFECT_UPDATE, postPEffectUpdate)
mod:AddCallback(ModCallbacks.MC_PRE_USE_ITEM, preUseItem)
mod:AddCallback(ModCallbacks.MC_USE_ITEM, useItem)
mod:AddCallback(ModCallbacks.MC_USE_CARD, useCard)
mod:AddCallback(ModCallbacks.MC_USE_PILL, usePill)
mod:AddCallback(ModCallbacks.MC_PRE_FAMILIAR_COLLISION, preFamiliarCollision)
mod:AddCallback(ModCallbacks.MC_FAMILIAR_INIT, familiarInit)
mod:AddCallback(ModCallbacks.MC_FAMILIAR_UPDATE, familiarUpdate)
mod:AddCallback(ModCallbacks.MC_EVALUATE_CACHE, evaluateCache)
mod:AddCallback(ModCallbacks.MC_POST_PLAYER_INIT, postPlayerInit)
mod:AddCallback(ModCallbacks.MC_PRE_GAME_EXIT, preGameExit)
mod:AddCallback(ModCallbacks.MC_ENTITY_TAKE_DMG, entityTakeDmg)
mod:AddCallback(ModCallbacks.MC_POST_NEW_LEVEL, postNewLevel)
mod:AddCallback(ModCallbacks.MC_POST_NEW_ROOM, postNewRoom)
mod:AddCallback(ModCallbacks.MC_PRE_SPAWN_CLEAN_AWARD, preSpawnCleanAward)
mod:AddCallback(ModCallbacks.MC_GET_TRINKET, getTrinket)
mod:AddCallback(ModCallbacks.MC_POST_ENTITY_REMOVE, postEntityRemove)
mod:AddCallback(ModCallbacks.MC_POST_ENTITY_KILL, postEntityKill)
mod:AddCallback(ModCallbacks.MC_POST_NPC_DEATH, postNPCDeath)
mod:AddCallback(ModCallbacks.MC_POST_PLAYER_UPDATE, postPlayerUpdate)
mod:AddCallback(ModCallbacks.MC_POST_PICKUP_INIT, postPickupInit)
mod:AddCallback(ModCallbacks.MC_POST_PICKUP_UPDATE, postPickupUpdate)
mod:AddCallback(ModCallbacks.MC_PRE_PICKUP_COLLISION, prePickupCollision)
mod:AddCallback(ModCallbacks.MC_PRE_PLAYER_COLLISION, prePlayerCollision)
mod:AddCallback(ModCallbacks.MC_POST_PROJECTILE_UPDATE, postProjectileUpdate)
mod:AddCallback(ModCallbacks.MC_POST_TEAR_INIT, postTearInit)
mod:AddCallback(ModCallbacks.MC_POST_FIRE_TEAR, postFireTear)
mod:AddCallback(ModCallbacks.MC_POST_TEAR_UPDATE, postTearUpdate)
mod:AddCallback(ModCallbacks.MC_PRE_TEAR_COLLISION, preTearCollision)
mod:AddCallback(ModCallbacks.MC_POST_LASER_INIT, postLaserInit)
mod:AddCallback(ModCallbacks.MC_POST_LASER_UPDATE, postLaserUpdate)
mod:AddCallback(ModCallbacks.MC_POST_KNIFE_UPDATE, postKnifeUpdate)
mod:AddCallback(ModCallbacks.MC_POST_BOMB_UPDATE, postBombUpdate)
mod:AddCallback(ModCallbacks.MC_POST_EFFECT_INIT, postEffectInit)
mod:AddCallback(ModCallbacks.MC_POST_EFFECT_UPDATE, postEffectUpdate)
mod:AddCallback(ModCallbacks.MC_EXECUTE_CMD, executeCMD)

--Mod Compat
require("andromeda_src.compat.eid")
require("andromeda_src.compat.encyclopedia")
require("andromeda_src.compat.pog")